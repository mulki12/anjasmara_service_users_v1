# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: PUSH Workflow

on:
  push:
    branches:
      - master

jobs:
  app-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb:10.4
        env:
          MYSQL_CONNECTION: mysql
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: anjasmara_service_users
          MYSQL_USERNAME: root
          MYSQL_PASSWORD: anjas123
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v1
      - name: Install NPM Dependencies
        run: npm install
      - name: update NPM Dependencies
        run: npm update  

        
  build-js-production:
    name: Build JavaScript/CSS for PRODUCTION Server
    runs-on: ubuntu-latest
    needs: app-tests
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - name: NPM Build
        run: |
          npm install

   
  deploy-production:
    name: Deploy Project to registry docker
    runs-on: ubuntu-latest
    needs: [build-js-production, app-tests]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2

      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/anjasmara_service_users_v1:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
