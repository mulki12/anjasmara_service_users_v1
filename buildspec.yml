version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 221047265242.dkr.ecr.ap-southeast-1.amazonaws.com
      - echo "Verify AWS CLI Version..."
      - aws --version
      - echo "Login in to Amazon ECR..."
      - $(aws ecr get-login --no-include-email)
       # Update Kube config Home Directory
      - export KUBECONFIG=$HOME/.kube/config
      - echo "Update Kube Config"      
      #- aws eks update-kubeconfig --name EKS-Cluster --region ap-southeast-1
  build:
    commands:
      - echo Build started on date
      - echo Building the Docker image...          
      - docker build --tag $REPOSITORY_URI:$TAG .
      - docker tag anjasmara_service_users_v1:latest 221047265242.dkr.ecr.ap-southeast-1.amazonaws.com/anjasmara_service_users_v1:latest

  post_build:
    commands:
      - echo Build completed on date
      - echo Pushing the Docker image...
      - docker push docker push $REPOSITORY_URI:$TAG
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - echo "Apply changes to kube manifests"            
      - kubectl apply -f kube-manifests/*
      - printf '[{"name":"tes-app","imageUri":"%s"}]' 221047265242.dkr.ecr.ap-southeast-1.amazonaws.com/anjasmara_service_users_v1:latest > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - kube-manifests/*